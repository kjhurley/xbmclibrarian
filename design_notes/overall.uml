
@startuml
title high level view of librarian flow
start
:restore last states;
note right: Use pickle?
:search latest available file info;
note right: get latest data from htsp
:compare against last know files;
note right: last know files will be those listed in restored object
while (new file info?) is (found one)
  :process htsp file;
  :build episode;
  :build new filename under xbmc;
  if (store using copy?) then (yes)
    :copy file to new filename;
  elseif (store using move?) then (yes)
    :move file to new filename;
    else (store using link)
     :link file to new filename;
  endif
  :record this file in list of know files;
endwhile (none)
:save current state including all known files;
stop
@enduml

@startuml
Title Match HTSP recording to TVDB
start
:for rec in recordings;
:look for episode title in description;
if (episode title in description) then (yes)
 :lookup in tvdb using title and episode;
else
 :present description to user and ask to select matching episode;
endif
  
endif
stop
@enduml

@startuml 
title Abstract classes
class Librarian{
  look_for_new_files()
}
class LibraryRecord 
class MonitorForNewRecording <<ABC>> {
  read_log()
  episode_factory()
}
class Programme <<ABC>>
IPlayerMonitor <|- MonitorForNewRecording
Librarian o-* "0..*" LibraryRecord : keeps
Librarian *-- IPlayerMonitor: checks for updates
IPlayerMonitor .. HorizonEpisode : creates >
HorizonEpisode <|- IPlayerEpisode 
IPlayerEpisode <|- Programme
TVDBFiler .. FilingAssistant: generates filenames for >
FilingAssistant .. Librarian : does filing for >
class StoringRule <<ABC>>
StoreAsALink .. StoringRule
FilingAssistant -- StoringRule: provides storage rules <
FilingAssistant .. StoreAsALink : knows how to >
@enduml